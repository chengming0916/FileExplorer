<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:conv="clr-namespace:QuickZip.Converters"       >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/FileExplorer3;component/Themes/Default/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/FileExplorer3;component/Themes/Default/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/FileExplorer3;component/Themes/Default/Geometry.xaml" />        
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="BaseToggleButton" TargetType="{x:Type ToggleButton}">
        <Border x:Name="border"
                Padding="2,0"
				Background="Transparent" 
				BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"				
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="11"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                              VerticalAlignment="Center" Grid.RowSpan="2" />
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
                <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
            </Trigger>-->
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrush}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="BasicArrowButton" TargetType="{x:Type ToggleButton}" >
        <Border x:Name="border"
                Padding="2,0" Background="Transparent" 
                BorderBrush="Transparent" BorderThickness="1"
				MinHeight="20" MinWidth ="12" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Path x:Name="path" Fill="{TemplateBinding Foreground}"
                    Data="{StaticResource NormalArrow}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" 
                    Margin="{TemplateBinding Padding}" IsHitTestVisible="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Data" TargetName="path" Value="{StaticResource ExpandedArrow}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Data" TargetName="path" Value="{StaticResource ExpandedArrow}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ExpanderArrowButton" TargetType="{x:Type ToggleButton}" >
        <Border x:Name="border" 
                Padding="2,0" Background="Transparent" 
                BorderBrush="Transparent" BorderThickness="1"
				MinHeight="20" MinWidth ="12" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Path x:Name="path"  Stroke="Black" StrokeThickness="1.2"
                    Data="{StaticResource ExpanderArrow}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" 
                    Margin="{TemplateBinding Padding}" IsHitTestVisible="True" />
        </Border>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Data" TargetName="path" Value="{StaticResource ExpandedArrow}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Data" TargetName="path" Value="{StaticResource ExpandedArrow}"/>
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>


</ResourceDictionary>